from environs import Env
from aiogram import Router, types
from aiogram.filters import CommandStart

from libs.api_client import fetch_mentors
import app.keyboards as kb

start_router = Router()

env = Env()
env.read_env()

API_URL = env.str('API_URL', 'http://localhost:8000')


@start_router.message(CommandStart())
async def send_welcome(message: types.Message):
    mentors = fetch_mentors(API_URL)
    if mentors is None:
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ "
                            "–ø–æ–∑–∂–µ.")
        return

    telegram_id = message.from_user.id
    user_name = message.from_user.first_name
    is_mentor = any(str(telegram_id) == str(mentor.get('tg_chat_id'))
                    for mentor in mentors)

    welcome_message = f"–ü—Ä–∏–≤–µ—Ç, {user_name}!\n"
    if is_mentor:
        welcome_message += "–Ø –≤–∏–∂—É, —á—Ç–æ —Ç—ã –º–µ–Ω—Ç–æ—Ä! üòä\n"
    else:
        welcome_message += ("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π "
                            "–º–µ–Ω—Ç–æ—Ä–æ–≤, —É—á–µ–Ω–∏–∫!\n")

    await message.reply(welcome_message, reply_markup=kb.main_menu_keyboard)
